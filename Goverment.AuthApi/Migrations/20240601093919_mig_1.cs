using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Goverment.AuthApi.Migrations
{
    /// <inheritdoc />
    public partial class mig_1 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "passwordhash", "passwordsalt" },
                values: new object[] { new byte[] { 98, 11, 119, 46, 145, 170, 31, 180, 245, 112, 223, 107, 96, 110, 246, 102, 122, 48, 249, 55, 110, 208, 182, 116, 170, 171, 255, 166, 28, 243, 191, 3, 249, 54, 36, 70, 10, 231, 198, 168, 152, 122, 236, 174, 150, 90, 117, 75, 177, 252, 101, 30, 116, 153, 218, 154, 34, 164, 151, 124, 93, 162, 184, 1 }, new byte[] { 145, 143, 169, 219, 36, 215, 126, 169, 63, 177, 191, 117, 80, 147, 0, 119, 202, 223, 167, 147, 46, 123, 172, 232, 68, 150, 53, 218, 10, 119, 94, 227, 204, 51, 211, 0, 172, 195, 233, 111, 166, 68, 14, 35, 15, 57, 46, 230, 33, 16, 245, 227, 214, 2, 236, 238, 98, 12, 26, 250, 237, 233, 157, 179, 105, 114, 193, 21, 100, 246, 174, 174, 203, 219, 160, 7, 248, 148, 64, 25, 105, 180, 117, 177, 206, 225, 152, 99, 4, 77, 85, 31, 169, 49, 112, 132, 160, 156, 240, 127, 65, 144, 2, 225, 194, 232, 235, 10, 19, 203, 108, 114, 38, 112, 159, 150, 112, 162, 212, 161, 46, 138, 246, 45, 195, 186, 162, 182 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "passwordhash", "passwordsalt" },
                values: new object[] { new byte[] { 158, 89, 186, 226, 20, 21, 234, 169, 162, 217, 120, 20, 12, 63, 32, 147, 229, 102, 221, 88, 29, 140, 63, 228, 10, 233, 245, 230, 30, 47, 186, 191, 232, 23, 238, 239, 250, 154, 172, 223, 164, 62, 14, 175, 219, 213, 13, 133, 199, 55, 231, 205, 197, 23, 142, 172, 192, 57, 5, 51, 1, 95, 62, 142 }, new byte[] { 43, 40, 52, 39, 204, 63, 239, 204, 180, 218, 210, 237, 222, 154, 147, 232, 162, 36, 108, 100, 121, 127, 129, 40, 117, 33, 254, 131, 137, 15, 149, 112, 236, 61, 249, 83, 193, 161, 102, 144, 0, 236, 137, 193, 165, 203, 124, 17, 224, 9, 128, 163, 61, 90, 64, 187, 71, 163, 183, 47, 247, 96, 136, 216, 88, 136, 63, 18, 79, 33, 232, 185, 126, 82, 127, 140, 211, 21, 119, 44, 205, 17, 18, 207, 226, 190, 98, 45, 113, 232, 184, 233, 62, 91, 60, 3, 54, 125, 40, 67, 45, 93, 166, 71, 199, 44, 40, 101, 85, 183, 159, 143, 215, 109, 187, 207, 183, 100, 175, 99, 85, 45, 71, 238, 77, 180, 2, 127 } });
        }
    }
}
