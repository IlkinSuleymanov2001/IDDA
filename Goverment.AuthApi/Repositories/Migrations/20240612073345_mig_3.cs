using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Goverment.AuthApi.Migrations
{
    /// <inheritdoc />
    public partial class mig_3 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "passwordhash", "PasswordSalt" },
                values: new object[] { new byte[] { 128, 95, 30, 6, 225, 192, 234, 37, 211, 70, 102, 137, 220, 66, 198, 178, 15, 33, 41, 131, 152, 52, 66, 79, 132, 254, 6, 164, 174, 177, 188, 103, 71, 145, 142, 17, 189, 78, 108, 183, 222, 163, 84, 205, 240, 68, 12, 179, 9, 44, 182, 182, 84, 27, 10, 151, 151, 109, 54, 251, 100, 1, 139, 248 }, new byte[] { 143, 214, 3, 20, 8, 29, 103, 25, 226, 160, 165, 230, 247, 101, 191, 93, 25, 15, 191, 137, 175, 22, 186, 249, 151, 69, 200, 158, 43, 92, 127, 69, 141, 89, 177, 174, 153, 4, 222, 112, 149, 249, 34, 66, 224, 214, 160, 159, 23, 203, 163, 135, 111, 54, 142, 139, 229, 220, 194, 113, 130, 178, 193, 218, 193, 220, 43, 135, 84, 245, 212, 33, 113, 98, 160, 212, 69, 207, 72, 207, 165, 116, 196, 138, 123, 47, 34, 74, 217, 254, 104, 23, 148, 121, 224, 10, 33, 245, 86, 102, 189, 247, 62, 193, 9, 130, 187, 205, 229, 89, 65, 61, 195, 135, 243, 238, 212, 119, 204, 175, 72, 227, 186, 98, 247, 130, 106, 130 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "passwordhash", "PasswordSalt" },
                values: new object[] { new byte[] { 114, 203, 123, 201, 116, 6, 211, 220, 251, 236, 164, 137, 79, 72, 219, 136, 25, 169, 18, 70, 124, 157, 82, 151, 157, 43, 225, 199, 22, 39, 28, 5, 67, 250, 119, 158, 176, 252, 42, 75, 192, 45, 120, 46, 239, 10, 193, 117, 91, 217, 143, 210, 61, 248, 189, 18, 27, 132, 7, 72, 197, 57, 1, 51 }, new byte[] { 201, 59, 178, 154, 64, 217, 75, 61, 14, 99, 182, 91, 172, 184, 114, 161, 165, 139, 4, 141, 205, 192, 88, 51, 151, 130, 87, 8, 37, 93, 142, 8, 129, 8, 180, 242, 85, 53, 158, 220, 164, 117, 245, 16, 205, 150, 161, 35, 99, 211, 143, 197, 10, 134, 112, 9, 110, 205, 220, 235, 59, 234, 111, 109, 112, 20, 141, 213, 207, 236, 205, 13, 142, 71, 227, 170, 146, 132, 247, 250, 9, 48, 203, 22, 67, 219, 150, 120, 89, 105, 117, 242, 137, 183, 23, 85, 132, 45, 162, 199, 244, 18, 243, 170, 248, 188, 14, 141, 86, 114, 56, 41, 173, 137, 143, 19, 210, 249, 50, 64, 37, 229, 117, 133, 84, 182, 68, 253 } });
        }
    }
}
